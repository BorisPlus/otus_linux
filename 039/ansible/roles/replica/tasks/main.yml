---
- name: Remove installed packages
  shell: |
    yum list installed | grep {{ item }} | awk '{print $1}' | xargs yum remove -y
    exit 0
  loop:
    - percona
  tags:
    - clean-up

- name: Remove files
  shell: "rm -rf {{ item }}"
  loop:
    - /etc/my.cnf.d/
    - /etc/my.cnf
    - /var/lib/mysql/
    - /var/log/mysqld.log
  tags:
    - clean-up

- name: Install https://repo.percona.com/yum/percona-release-latest.noarch.rpm
  yum:
    name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
    state: present
  tags:
    - install-percona-repo
    - install-percona
    - deploy

- name: Get last Percona-Server-server version
  shell: yum list | grep -i "Percona-Server-server." | sort | tail -1 | awk -F'.' '{print $1}'
  register: last_percona_server_version
  tags:
    - get-percona-server-last-version
    - install-percona
    - deploy

- name: Print Last Percona Server version
  debug: msg="Last Percona Server version is '{{ last_percona_server_version['stdout'] }}'"
  tags:
    - get-percona-server-last-version
    - install-percona
    - deploy

- name: "Install last Percona Server version: {{ last_percona_server_version['stdout'] }}"
  yum:
    name: "{{ last_percona_server_version['stdout'] }}"
    state: present
  tags:
    - install-percona
    - deploy

- name: Collect /etc/my.cnf.d/ files
  copy:
    src: ../files/etc/my.cnf.d/
    dest: /etc/my.cnf.d/
  tags:
    - collect-my.cnf.d-files
    - deploy

- name: Collect /etc/my.cnf.d/ templated files
  template:
    src: ../files/etc/{{ item }}
    dest: /etc/{{ item }}
  loop:
    - my.cnf.d/00-bindaddress.cnf
    - my.cnf.d/01-base.cnf
    - my.cnf.d/05-binlog.cnf
  tags:
    - collect-my.cnf.d-templated-files
    - deploy

- name: Start MySQL
  systemd:
    state: restarted
    name: mysql
  tags:
    - systemctl-start-mysql
    - deploy

- name: MySQL root password
  shell: cat /var/log/mysqld.log | grep 'root@localhost:' | tail -1 | awk '{print $11}'
  register: last_mysql_root_password
  tags:
    - get-mysql-root-password
    - mysql-alter-root-identified
    - get-mysql-server-id
    - deploy

- name: Print MySQL root password
  debug: msg="MySQL root password is '{{ last_mysql_root_password['stdout'] }}'"
  tags:
    - get-mysql-root-password
    - get-mysql-server-id
    - mysql-alter-root-identified
    - deploy

- name: Mysql | ALTER ROOT USER
  shell: mysql --connect-expired-password -uroot -p'{{ last_mysql_root_password['stdout'] }}' -e "ALTER USER USER() IDENTIFIED BY '{{ mysql_root_password }}';"
  tags:
    - mysql-alter-root-identified
    - deploy

- name: Just for ansible example reexecuting
  lineinfile:
    insertafter: EOF
    dest: /var/log/mysqld.log
    line: "0000-00-00T00:00:00.000000Z 1 [Note] A password is generated by ansible for root@localhost: {{ mysql_root_password }}"
  tags:
    - mysql-alter-root-identified
    - deploy

# ERROR 1820 (HY000) at line 1: You must reset your password using ALTER USER statement before executing this statement.
- name: Mysql | SELECT server_id
  shell: mysql --connect-expired-password -uroot -p'{{ mysql_root_password }}' -e 'SELECT @@server_id;'
  register: mysql_server_id
  tags:
    - get-mysql-server-id
    - deploy

- name: Print Mysql server id
  debug: msg={{ mysql_server_id['stdout'] }}
  tags:
    - get-mysql-server-id
    - deploy

- name: Mysql | SELECT SHOW VARIABLES LIKE 'gtid_mode'
  shell: mysql --connect-expired-password -uroot -p'{{ mysql_root_password }}' -e "SHOW VARIABLES LIKE 'gtid_mode';"
  register: gtid_mode
  tags:
    - get-mysql-gtid-mode
    - deploy

- name: Mysql | 'gtid_mode' VARIABLES
  debug: msg="Mysql gtid mode is'{{ gtid_mode['stdout'] }}'"
  tags:
    - get-mysql-gtid-mode
    - deploy
#
- name: Mysql | Configure SLAVE
  shell: mysql -uroot -p'{{ mysql_root_password }}' -e "{{ item }}"
  loop:
    - "RESET MASTER;"
    - "SOURCE /home/vagrant/common/master.sql;"
    - "SHOW DATABASES LIKE 'bet';"
    - "USE bet; SHOW TABLES;"
    - "CHANGE MASTER TO MASTER_HOST='192.168.39.10', MASTER_PORT = 3306, MASTER_USER = 'repl', MASTER_PASSWORD = '!OtusLinux2018', MASTER_AUTO_POSITION = 1;"
    - "START SLAVE;"
  tags:
    - post-mysql-stmt
    - deploy
