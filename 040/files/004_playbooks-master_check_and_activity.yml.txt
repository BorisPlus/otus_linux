
PLAY [Playbook of check master] ************************************************

TASK [Gathering Facts] *********************************************************
ok: [master]

TASK [../roles/master_check_and_activity : PostgreSQL master checker] **********
changed: [master] => (item=SELECT application_name, state, sync_priority, sync_state FROM pg_stat_replication;)
changed: [master] => (item=SELECT * FROM pg_stat_replication;)
changed: [master] => (item=SELECT datname AS database_name FROM pg_database;)
changed: [master] => (item=SELECT schema_name FROM information_schema.schemata;)
changed: [master] => (item=SELECT schemaname, tablename FROM pg_catalog.pg_tables;)
changed: [master] => (item=SHOW archive_mode;)
changed: [master] => (item=SHOW archive_command;)

TASK [../roles/master_check_and_activity : Store check to file] ****************
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:56.178833', 'stdout': ' application_name |   state   | sync_priority | sync_state \n------------------+-----------+---------------+------------\n walreceiver      | streaming |             0 | async\n(1 строка)', 'cmd': 'sudo -iu postgres psql -c "SELECT application_name, state, sync_priority, sync_state FROM pg_stat_replication;"', 'rc': 0, 'start': '2021-11-23 17:49:55.710762', 'stderr': '', 'delta': '0:00:00.468071', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SELECT application_name, state, sync_priority, sync_state FROM pg_stat_replication;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': [' application_name |   state   | sync_priority | sync_state ', '------------------+-----------+---------------+------------', ' walreceiver      | streaming |             0 | async', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': 'SELECT application_name, state, sync_priority, sync_state FROM pg_stat_replication;', 'ansible_loop_var': 'item'})
changed: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:56.822286', 'stdout': '  pid  | usesysid |  usename   | application_name |  client_addr  | client_hostname | client_port |         backend_start         | backend_xmin |   state   | sent_lsn  | write_lsn | flush_lsn | replay_lsn |    write_lag    |   flush_lag    |   replay_lag    | sync_priority | sync_state |          reply_time           \n-------+----------+------------+------------------+---------------+-----------------+-------------+-------------------------------+--------------+-----------+-----------+-----------+-----------+------------+-----------------+----------------+-----------------+---------------+------------+-------------------------------\n 29243 |    16384 | replicator | walreceiver      | 192.168.40.11 |                 |       36038 | 2021-11-23 17:49:41.469113+00 |              | streaming | 0/3000060 | 0/3000060 | 0/3000060 | 0/3000060  | 00:00:00.079097 | 00:00:00.08052 | 00:00:00.080527 |             0 | async      | 2021-11-23 17:49:55.318138+00\n(1 строка)', 'cmd': 'sudo -iu postgres psql -c "SELECT * FROM pg_stat_replication;"', 'rc': 0, 'start': '2021-11-23 17:49:56.695559', 'stderr': '', 'delta': '0:00:00.126727', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SELECT * FROM pg_stat_replication;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['  pid  | usesysid |  usename   | application_name |  client_addr  | client_hostname | client_port |         backend_start         | backend_xmin |   state   | sent_lsn  | write_lsn | flush_lsn | replay_lsn |    write_lag    |   flush_lag    |   replay_lag    | sync_priority | sync_state |          reply_time           ', '-------+----------+------------+------------------+---------------+-----------------+-------------+-------------------------------+--------------+-----------+-----------+-----------+-----------+------------+-----------------+----------------+-----------------+---------------+------------+-------------------------------', ' 29243 |    16384 | replicator | walreceiver      | 192.168.40.11 |                 |       36038 | 2021-11-23 17:49:41.469113+00 |              | streaming | 0/3000060 | 0/3000060 | 0/3000060 | 0/3000060  | 00:00:00.079097 | 00:00:00.08052 | 00:00:00.080527 |             0 | async      | 2021-11-23 17:49:55.318138+00', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': 'SELECT * FROM pg_stat_replication;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:57.451457', 'stdout': ' database_name \n---------------\n postgres\n template1\n template0\n(3 строки)', 'cmd': 'sudo -iu postgres psql -c "SELECT datname AS database_name FROM pg_database;"', 'rc': 0, 'start': '2021-11-23 17:49:57.332144', 'stderr': '', 'delta': '0:00:00.119313', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SELECT datname AS database_name FROM pg_database;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': [' database_name ', '---------------', ' postgres', ' template1', ' template0', '(3 строки)'], 'stderr_lines': [], 'failed': False, 'item': 'SELECT datname AS database_name FROM pg_database;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:58.077622', 'stdout': '    schema_name     \n--------------------\n pg_toast\n pg_catalog\n public\n information_schema\n(4 строки)', 'cmd': 'sudo -iu postgres psql -c "SELECT schema_name FROM information_schema.schemata;"', 'rc': 0, 'start': '2021-11-23 17:49:57.956800', 'stderr': '', 'delta': '0:00:00.120822', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SELECT schema_name FROM information_schema.schemata;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['    schema_name     ', '--------------------', ' pg_toast', ' pg_catalog', ' public', ' information_schema', '(4 строки)'], 'stderr_lines': [], 'failed': False, 'item': 'SELECT schema_name FROM information_schema.schemata;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:58.692733', 'stdout': '     schemaname     |        tablename        \n--------------------+-------------------------\n pg_catalog         | pg_statistic\n pg_catalog         | pg_type\n pg_catalog         | pg_foreign_table\n pg_catalog         | pg_authid\n pg_catalog         | pg_statistic_ext_data\n pg_catalog         | pg_largeobject\n pg_catalog         | pg_user_mapping\n pg_catalog         | pg_subscription\n pg_catalog         | pg_attribute\n pg_catalog         | pg_proc\n pg_catalog         | pg_class\n pg_catalog         | pg_attrdef\n pg_catalog         | pg_constraint\n pg_catalog         | pg_inherits\n pg_catalog         | pg_index\n pg_catalog         | pg_operator\n pg_catalog         | pg_opfamily\n pg_catalog         | pg_opclass\n pg_catalog         | pg_am\n pg_catalog         | pg_amop\n pg_catalog         | pg_amproc\n pg_catalog         | pg_language\n pg_catalog         | pg_largeobject_metadata\n pg_catalog         | pg_aggregate\n pg_catalog         | pg_statistic_ext\n pg_catalog         | pg_rewrite\n pg_catalog         | pg_trigger\n pg_catalog         | pg_event_trigger\n pg_catalog         | pg_description\n pg_catalog         | pg_cast\n pg_catalog         | pg_enum\n pg_catalog         | pg_namespace\n pg_catalog         | pg_conversion\n pg_catalog         | pg_depend\n pg_catalog         | pg_database\n pg_catalog         | pg_db_role_setting\n pg_catalog         | pg_tablespace\n pg_catalog         | pg_auth_members\n pg_catalog         | pg_shdepend\n pg_catalog         | pg_shdescription\n pg_catalog         | pg_ts_config\n pg_catalog         | pg_ts_config_map\n pg_catalog         | pg_ts_dict\n pg_catalog         | pg_ts_parser\n pg_catalog         | pg_ts_template\n pg_catalog         | pg_extension\n pg_catalog         | pg_foreign_data_wrapper\n pg_catalog         | pg_foreign_server\n pg_catalog         | pg_policy\n pg_catalog         | pg_replication_origin\n pg_catalog         | pg_default_acl\n pg_catalog         | pg_init_privs\n pg_catalog         | pg_seclabel\n pg_catalog         | pg_shseclabel\n pg_catalog         | pg_collation\n pg_catalog         | pg_partitioned_table\n pg_catalog         | pg_range\n pg_catalog         | pg_transform\n pg_catalog         | pg_sequence\n pg_catalog         | pg_publication\n pg_catalog         | pg_publication_rel\n pg_catalog         | pg_subscription_rel\n information_schema | sql_implementation_info\n information_schema | sql_parts\n information_schema | sql_sizing\n information_schema | sql_features\n(66 строк)', 'cmd': 'sudo -iu postgres psql -c "SELECT schemaname, tablename FROM pg_catalog.pg_tables;"', 'rc': 0, 'start': '2021-11-23 17:49:58.566144', 'stderr': '', 'delta': '0:00:00.126589', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SELECT schemaname, tablename FROM pg_catalog.pg_tables;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['     schemaname     |        tablename        ', '--------------------+-------------------------', ' pg_catalog         | pg_statistic', ' pg_catalog         | pg_type', ' pg_catalog         | pg_foreign_table', ' pg_catalog         | pg_authid', ' pg_catalog         | pg_statistic_ext_data', ' pg_catalog         | pg_largeobject', ' pg_catalog         | pg_user_mapping', ' pg_catalog         | pg_subscription', ' pg_catalog         | pg_attribute', ' pg_catalog         | pg_proc', ' pg_catalog         | pg_class', ' pg_catalog         | pg_attrdef', ' pg_catalog         | pg_constraint', ' pg_catalog         | pg_inherits', ' pg_catalog         | pg_index', ' pg_catalog         | pg_operator', ' pg_catalog         | pg_opfamily', ' pg_catalog         | pg_opclass', ' pg_catalog         | pg_am', ' pg_catalog         | pg_amop', ' pg_catalog         | pg_amproc', ' pg_catalog         | pg_language', ' pg_catalog         | pg_largeobject_metadata', ' pg_catalog         | pg_aggregate', ' pg_catalog         | pg_statistic_ext', ' pg_catalog         | pg_rewrite', ' pg_catalog         | pg_trigger', ' pg_catalog         | pg_event_trigger', ' pg_catalog         | pg_description', ' pg_catalog         | pg_cast', ' pg_catalog         | pg_enum', ' pg_catalog         | pg_namespace', ' pg_catalog         | pg_conversion', ' pg_catalog         | pg_depend', ' pg_catalog         | pg_database', ' pg_catalog         | pg_db_role_setting', ' pg_catalog         | pg_tablespace', ' pg_catalog         | pg_auth_members', ' pg_catalog         | pg_shdepend', ' pg_catalog         | pg_shdescription', ' pg_catalog         | pg_ts_config', ' pg_catalog         | pg_ts_config_map', ' pg_catalog         | pg_ts_dict', ' pg_catalog         | pg_ts_parser', ' pg_catalog         | pg_ts_template', ' pg_catalog         | pg_extension', ' pg_catalog         | pg_foreign_data_wrapper', ' pg_catalog         | pg_foreign_server', ' pg_catalog         | pg_policy', ' pg_catalog         | pg_replication_origin', ' pg_catalog         | pg_default_acl', ' pg_catalog         | pg_init_privs', ' pg_catalog         | pg_seclabel', ' pg_catalog         | pg_shseclabel', ' pg_catalog         | pg_collation', ' pg_catalog         | pg_partitioned_table', ' pg_catalog         | pg_range', ' pg_catalog         | pg_transform', ' pg_catalog         | pg_sequence', ' pg_catalog         | pg_publication', ' pg_catalog         | pg_publication_rel', ' pg_catalog         | pg_subscription_rel', ' information_schema | sql_implementation_info', ' information_schema | sql_parts', ' information_schema | sql_sizing', ' information_schema | sql_features', '(66 строк)'], 'stderr_lines': [], 'failed': False, 'item': 'SELECT schemaname, tablename FROM pg_catalog.pg_tables;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:59.316381', 'stdout': ' archive_mode \n--------------\n on\n(1 строка)', 'cmd': 'sudo -iu postgres psql -c "SHOW archive_mode;"', 'rc': 0, 'start': '2021-11-23 17:49:59.197104', 'stderr': '', 'delta': '0:00:00.119277', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SHOW archive_mode;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': [' archive_mode ', '--------------', ' on', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': 'SHOW archive_mode;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:49:59.931194', 'stdout': ' archive_command \n-----------------\n \n(1 строка)', 'cmd': 'sudo -iu postgres psql -c "SHOW archive_command;"', 'rc': 0, 'start': '2021-11-23 17:49:59.814480', 'stderr': '', 'delta': '0:00:00.116714', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "SHOW archive_command;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': [' archive_command ', '-----------------', ' ', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': 'SHOW archive_command;', 'ansible_loop_var': 'item'})

TASK [../roles/master_check_and_activity : PostgreSQL master activity] *********
changed: [master] => (item=DROP SCHEMA IF EXISTS test_schema CASCADE; CREATE SCHEMA test_schema;)
changed: [master] => (item=CREATE TABLE test_schema.test_table(id serial primary key, value varchar(50));)
changed: [master] => (item=INSERT INTO test_schema.test_table(value) VALUES ('first'),('second');)

TASK [../roles/master_check_and_activity : Store activity to file] *************
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:50:05.059311', 'stdout': 'CREATE SCHEMA', 'cmd': 'sudo -iu postgres psql -c "DROP SCHEMA IF EXISTS test_schema CASCADE; CREATE SCHEMA test_schema;"', 'rc': 0, 'start': '2021-11-23 17:50:04.935494', 'stderr': 'NOTICE:  schema "test_schema" does not exist, skipping', 'delta': '0:00:00.123817', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "DROP SCHEMA IF EXISTS test_schema CASCADE; CREATE SCHEMA test_schema;"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['CREATE SCHEMA'], 'stderr_lines': ['NOTICE:  schema "test_schema" does not exist, skipping'], 'failed': False, 'item': 'DROP SCHEMA IF EXISTS test_schema CASCADE; CREATE SCHEMA test_schema;', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:50:05.707379', 'stdout': 'CREATE TABLE', 'cmd': 'sudo -iu postgres psql -c "CREATE TABLE test_schema.test_table(id serial primary key, value varchar(50));"', 'rc': 0, 'start': '2021-11-23 17:50:05.567802', 'stderr': '', 'delta': '0:00:00.139577', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "CREATE TABLE test_schema.test_table(id serial primary key, value varchar(50));"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['CREATE TABLE'], 'stderr_lines': [], 'failed': False, 'item': 'CREATE TABLE test_schema.test_table(id serial primary key, value varchar(50));', 'ansible_loop_var': 'item'})
ok: [master -> localhost] => (item={'changed': True, 'end': '2021-11-23 17:50:06.331478', 'stdout': 'INSERT 0 2', 'cmd': 'sudo -iu postgres psql -c "INSERT INTO test_schema.test_table(value) VALUES (\'first\'),(\'second\');"', 'rc': 0, 'start': '2021-11-23 17:50:06.208624', 'stderr': '', 'delta': '0:00:00.122854', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'sudo -iu postgres psql -c "INSERT INTO test_schema.test_table(value) VALUES (\'first\'),(\'second\');"', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['INSERT 0 2'], 'stderr_lines': [], 'failed': False, 'item': "INSERT INTO test_schema.test_table(value) VALUES ('first'),('second');", 'ansible_loop_var': 'item'})

PLAY RECAP *********************************************************************
master                     : ok=5    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

