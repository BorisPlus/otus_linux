
PLAY [Playbook of PostgreSQL barman on backup] *********************************

TASK [Gathering Facts] *********************************************************
ok: [backup]

TASK [../roles/barman_on_backup : kick barman] *********************************
changed: [backup] => (item=barman cron)
changed: [backup] => (item=barman check pg)
changed: [backup] => (item=barman backup pg)
changed: [backup] => (item=barman list-backup pg)

TASK [../roles/barman_on_backup : Store barman kick] ***************************
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-11-23 04:32:57.729608', 'stdout': 'Starting WAL archiving for server pg', 'cmd': 'barman cron', 'rc': 0, 'start': '2021-11-23 04:32:57.280209', 'stderr': '', 'delta': '0:00:00.449399', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'barman cron', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['Starting WAL archiving for server pg'], 'stderr_lines': [], 'failed': False, 'item': 'barman cron', 'ansible_loop_var': 'item'})
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-11-23 04:32:59.369846', 'stdout': 'Server pg:\n\tPostgreSQL: OK\n\tsuperuser or standard user with backup privileges: OK\n\tPostgreSQL streaming: OK\n\twal_level: OK\n\treplication slot: OK\n\tdirectories: OK\n\tretention policy settings: OK\n\tbackup maximum age: OK (interval provided: 4 days, latest backup age: 53 seconds)\n\tcompression settings: OK\n\tfailed backups: OK (there are 0 failed backups)\n\tminimum redundancy requirements: OK (have 1 backups, expected at least 1)\n\tpg_basebackup: OK\n\tpg_basebackup compatible: OK\n\tpg_basebackup supports tablespaces mapping: OK\n\tsystemid coherence: OK\n\tpg_receivexlog: OK\n\tpg_receivexlog compatible: OK\n\treceive-wal running: OK\n\tarchive_mode: OK\n\tarchive_command: OK\n\tcontinuous archiving: OK\n\tarchiver errors: OK', 'cmd': 'barman check pg', 'rc': 0, 'start': '2021-11-23 04:32:58.836402', 'stderr': '', 'delta': '0:00:00.533444', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'barman check pg', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['Server pg:', '\tPostgreSQL: OK', '\tsuperuser or standard user with backup privileges: OK', '\tPostgreSQL streaming: OK', '\twal_level: OK', '\treplication slot: OK', '\tdirectories: OK', '\tretention policy settings: OK', '\tbackup maximum age: OK (interval provided: 4 days, latest backup age: 53 seconds)', '\tcompression settings: OK', '\tfailed backups: OK (there are 0 failed backups)', '\tminimum redundancy requirements: OK (have 1 backups, expected at least 1)', '\tpg_basebackup: OK', '\tpg_basebackup compatible: OK', '\tpg_basebackup supports tablespaces mapping: OK', '\tsystemid coherence: OK', '\tpg_receivexlog: OK', '\tpg_receivexlog compatible: OK', '\treceive-wal running: OK', '\tarchive_mode: OK', '\tarchive_command: OK', '\tcontinuous archiving: OK', '\tarchiver errors: OK'], 'stderr_lines': [], 'failed': False, 'item': 'barman check pg', 'ansible_loop_var': 'item'})
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-11-23 04:33:13.086003', 'stdout': 'Starting backup using postgres method for server pg in /var/lib/barman/pg/base/20211123T043300\nBackup start at LSN: 0/70000C8 (000000010000000000000007, 000000C8)\nStarting backup copy via pg_basebackup for 20211123T043300\nCopy done (time: 9 seconds)\nFinalising the backup.\nBackup size: 24.1 MiB\nBackup end at LSN: 0/9000060 (000000010000000000000009, 00000060)\nBackup completed (start time: 2021-11-23 04:33:00.512537, elapsed time: 10 seconds)\nProcessing xlog segments from streaming for pg\n\t000000010000000000000008\n\t000000010000000000000009\nProcessing xlog segments from file archival for pg\n\t000000010000000000000008\n\t000000010000000000000008.00000028.backup', 'cmd': 'barman backup pg', 'rc': 0, 'start': '2021-11-23 04:32:59.963738', 'stderr': '', 'delta': '0:00:13.122265', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'barman backup pg', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['Starting backup using postgres method for server pg in /var/lib/barman/pg/base/20211123T043300', 'Backup start at LSN: 0/70000C8 (000000010000000000000007, 000000C8)', 'Starting backup copy via pg_basebackup for 20211123T043300', 'Copy done (time: 9 seconds)', 'Finalising the backup.', 'Backup size: 24.1 MiB', 'Backup end at LSN: 0/9000060 (000000010000000000000009, 00000060)', 'Backup completed (start time: 2021-11-23 04:33:00.512537, elapsed time: 10 seconds)', 'Processing xlog segments from streaming for pg', '\t000000010000000000000008', '\t000000010000000000000009', 'Processing xlog segments from file archival for pg', '\t000000010000000000000008', '\t000000010000000000000008.00000028.backup'], 'stderr_lines': [], 'failed': False, 'item': 'barman backup pg', 'ansible_loop_var': 'item'})
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-11-23 04:33:14.624788', 'stdout': 'pg 20211123T043300 - Tue Nov 23 04:33:10 2021 - Size: 24.1 MiB - WAL Size: 0 B\npg 20211123T043156 - Tue Nov 23 04:32:06 2021 - Size: 24.1 MiB - WAL Size: 48.2 KiB', 'cmd': 'barman list-backup pg', 'rc': 0, 'start': '2021-11-23 04:33:14.268558', 'stderr': '', 'delta': '0:00:00.356230', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'barman list-backup pg', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['pg 20211123T043300 - Tue Nov 23 04:33:10 2021 - Size: 24.1 MiB - WAL Size: 0 B', 'pg 20211123T043156 - Tue Nov 23 04:32:06 2021 - Size: 24.1 MiB - WAL Size: 48.2 KiB'], 'stderr_lines': [], 'failed': False, 'item': 'barman list-backup pg', 'ansible_loop_var': 'item'})

TASK [../roles/barman_on_backup : barman check] ********************************
changed: [backup]

TASK [../roles/barman_on_backup : Store result of `barman check`] **************
changed: [backup -> localhost]

PLAY RECAP *********************************************************************
backup                     : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

