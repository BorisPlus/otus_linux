
PLAY [Playbook of PostgreSQL barman on backup] *********************************

TASK [Gathering Facts] *********************************************************
ok: [backup]

TASK [../roles/barman_on_backup : Install PostgreSQL repo] *********************
ok: [backup]

TASK [../roles/barman_on_backup : Install PostgreSQL server] *******************
ok: [backup]

TASK [../roles/barman_on_backup : Remote access check] *************************
changed: [backup] => (item=psql -c 'SELECT version()' -U barman -h 192.168.40.10 postgres)
changed: [backup] => (item=psql -U streaming_barman -h 192.168.40.10 -c "IDENTIFY_SYSTEM" replication=1)

TASK [../roles/barman_on_backup : Store remote access check] *******************
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-10-29 23:53:43.109494', 'stdout': '                                                 version                                                  \n----------------------------------------------------------------------------------------------------------\n PostgreSQL 11.13 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44), 64-bit\n(1 строка)', 'cmd': "psql -c 'SELECT version()' -U barman -h 192.168.40.10 postgres", 'rc': 0, 'start': '2021-10-29 23:53:43.045344', 'stderr': '', 'delta': '0:00:00.064150', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': "psql -c 'SELECT version()' -U barman -h 192.168.40.10 postgres", 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['                                                 version                                                  ', '----------------------------------------------------------------------------------------------------------', ' PostgreSQL 11.13 on x86_64-pc-linux-gnu, compiled by gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44), 64-bit', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': "psql -c 'SELECT version()' -U barman -h 192.168.40.10 postgres", 'ansible_loop_var': 'item'})
changed: [backup -> localhost] => (item={'changed': True, 'end': '2021-10-29 23:53:43.699676', 'stdout': '      systemid       | timeline |  xlogpos  | dbname \n---------------------+----------+-----------+--------\n 7024633752451234416 |        1 | 0/4000098 | \n(1 строка)', 'cmd': 'psql -U streaming_barman -h 192.168.40.10 -c "IDENTIFY_SYSTEM" replication=1', 'rc': 0, 'start': '2021-10-29 23:53:43.670554', 'stderr': '', 'delta': '0:00:00.029122', 'invocation': {'module_args': {'creates': None, 'executable': None, '_uses_shell': True, 'strip_empty_ends': True, '_raw_params': 'psql -U streaming_barman -h 192.168.40.10 -c "IDENTIFY_SYSTEM" replication=1', 'removes': None, 'argv': None, 'warn': False, 'chdir': None, 'stdin_add_newline': True, 'stdin': None}}, 'stdout_lines': ['      systemid       | timeline |  xlogpos  | dbname ', '---------------------+----------+-----------+--------', ' 7024633752451234416 |        1 | 0/4000098 | ', '(1 строка)'], 'stderr_lines': [], 'failed': False, 'item': 'psql -U streaming_barman -h 192.168.40.10 -c "IDENTIFY_SYSTEM" replication=1', 'ansible_loop_var': 'item'})

PLAY RECAP *********************************************************************
backup                     : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

