MACHINES = {
    :otuslinux002pro => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
        :disks => {
            :sata1 => {
                :dfile => './sata1.vdi',
                :size => 250,
                :port => 1
            },
            :sata2 => {
                :dfile => './sata2.vdi',
                :size => 250, # Megabytes
                :port => 2
            },
            :sata3 => {
                :dfile => './sata3.vdi',
                :size => 250,
                :port => 3
            },
            :sata4 => {
                :dfile => './sata4.vdi',
                :size => 250, # Megabytes
                :port => 4
            },
            :sata5 => {
                :dfile => './sata5.vdi', # Путь, по которому будет создан файл диска
                :size => 100, # Размер диска в мегабайтах
                :port => 5 # Номер порта на который будет зацеплен диск
            },
            :sata6 => {
                :dfile => './sata6.vdi',
                :size => 100,
                :port => 6
            },
            :sata7 => {
                :dfile => './sata7.vdi',
                :size => 100, # Размер диска в мегабайтах
                :port => 7
            },
            :sata8 => {
                :dfile => './sata8.vdi',
                :size => 100,
                :port => 8
            },
            :sata9 => {
                :dfile => './sata9.vdi',
                :size => 100,
                :port => 9
            }
        }
    }
}

Vagrant.configure("2") do |config|
    MACHINES.each do |boxname, boxconfig|
        config.vm.define boxname do |box|
            box.vm.box = boxconfig[:box_name]
            box.vm.host_name = boxname.to_s
            #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                needsController = false
                boxconfig[:disks].each do |dname, dconf|
                    unless File.exist?(dconf[:dfile])
                        vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                    needsController =  true
                    end
                end
                if needsController == true
                    vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
            end
            box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
                yum install -y mdadm smartmontools hdparm gdisk
                mdadm --create --verbose /dev/md0 -l 5 -n 5 /dev/sd{f,g,h,i,j} &> /dev/null
                mkdir /etc/mdadm
                echo "DEVICE partitions" | tee /etc/mdadm/mdadm.conf
                mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' | tee -a /etc/mdadm/mdadm.conf
                parted -s /dev/md0 mklabel gpt
                parted /dev/md0 mkpart primary ext4 2048KiB 20% &> /dev/null
                parted /dev/md0 mkpart primary ext4 20% 100% &> /dev/null
                for i in $(seq 1 2); do mkfs.ext4 /dev/md0p$i &> /dev/null; done
                mkdir -p /raid/part{1,2}
                for i in $(seq 1 2); do mount /dev/md0p$i /raid/part$i; done
                echo '/dev/md0p1 /raid/part1 ext4    defaults    1 2' | tee -a /etc/fstab
                echo '/dev/md0p2 /raid/part2 ext4    defaults    1 2' | tee -a /etc/fstab
                sleep 5
                cat /proc/mdstat
            SHELL
        end
    end
end

